Corporate Fiesta
Corporate Fiesta is the first of its kind Carnival that has a unique blend of sports and arts, catering to varied interest of employees belonging to the Corporate companies of all sizes across the City. The Carnival had many events for different sections of employees.

One notable event is a simple ball passing game called FORWARD and REVERSE organised for the smart Coders in the Corporate. In this event, the coders were given N passes and players having ids between 1 and 1000000. Initially some player with a given id had the ball in his possession. The coders had to make a program to display the id of the player who possessed the ball after exactly N passes.

Description of the passes:
There were two kinds of passes:
1. F ID
2. R

Explanation :
For the first kind of pass, the player in possession of the ball passes the ball to player with id=ID, while for the second kind of a pass, the player in possession of the ball passes the ball back to the player who had passed the ball to him.

Note:
It is guaranteed that the given order of all the passes will be a valid order .

Define a structure
struct PIDs
{
int *idStack;
int top;
int size;
};

Function Specifications:
void init(struct PIDs*, int );
void push(struct PIDs* , int );
void pop(struct PIDs *);
int peek(PIDs);



Input Format :
The first line of the input contains two space separated integers N, the number of passes and ID of the player possessing the ball in the very beginning. (1≤N≤100000 and 1≤ID≤1000000)
N lines follow describing the passes. ( for description of the passes, refer the statement above. )

Output Format :
Output to each test case should be a single line containing the "Player" ID (quotes for clarity) of the player who possesses the ball after N passes.
Refer sample input and output for formatting specifications.

Sample Input:
10 23
F 86
F 63
F 60
R
F 47
R
F 99
F 9
R
R

Sample Output:
Player 9

Explanation:
Initially, Player having id=23 possesses the ball. After pass 1, Player having id=86 possesses the ball. After pass 2, Player having id=63 possesses the ball. After pass 3, Player having id=60 possesses the ball. After pass 4, Player having id=63 possesses the ball. After pass 5, Player having id=47 possesses the ball. After pass 6, Player having id=63 possesses the ball. After pass 7, Player having id=99 possesses the ball. After pass 8, Player having id=9 possesses the ball. After pass 9, Player having id=99 possesses the ball. After pass 10, Player having id=9 possesses the ball. So the output is 9.




Main.java:
import java.util.*;
import java.util.Stack;
import java.io.*;
class Main
{
    public static void main(String args[])
    {
        //Fill your code here
    Scanner sc=new Scanner(System.in);
    int n=sc.nextInt();
    int c=sc.nextInt();
    Stack<Integer> s=new Stack<>();
    s.push(c);
    int dup,player;
    for(int i=0;i<n;i++){
        String line=sc.next();
        if(line.equals("F")){
            int newId=sc.nextInt();
            s.push(newId);
        }if(line.equals("R")){
            dup=s.pop();
            player=s.peek();
            s.push(dup);
            s.push(player);
        }
    }System.out.println("Player "+s.peek());
    sc.close();
    }
}